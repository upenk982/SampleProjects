<?xml	version = "1.0" encoding="UTF-8"?>
<beans	xmlns				=	"http://www.springframework.org/schema/beans"
		xmlns:security ="http://www.springframework.org/schema/security"
		xmlns:mvc="http://www.springframework.org/schema/mvc" 
		xmlns:context		=	"http://www.springframework.org/schema/context"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
							http://www.springframework.org/schema/security
							http://www.springframework.org/schema/security/spring-security-3.1.xsd
							http://www.springframework.org/schema/context
    						http://www.springframework.org/schema/context/spring-context-3.1.xsd
							http://www.springframework.org/schema/mvc
    						http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
 	
 	<description>
        This contains the spring security config and beans 
    </description>
 	
 	<!-- the current  pattern is securing http, but in order to secure https add (requires-channel="https") after access atrribute  and create a SSL on weblogic-->
	<security:http pattern="/eucService/**" create-session="stateless">
		<security:intercept-url pattern='/eucService/**' access="ROLE_REMOTE"/>
		<security:http-basic/>
	</security:http>
	
	<!-- Authenication Manager is currenlty hardcoded with username and password, but you can also do a 
	customAutenticationManager Impl or configure to LDAP -->
	<security:authentication-manager>
	  <security:authentication-provider>
	    <security:user-service>
		<security:user name="upen" password="123456" authorities="ROLE_REMOTE" />
	    </security:user-service>
	  </security:authentication-provider>
	</security:authentication-manager>

</beans>